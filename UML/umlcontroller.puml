@startuml
skinparam dpi 300
class com.unina.project.controller.CorsoModificaController {
+ void onnuovoCorsoButtonClick()
+ void setCorso(Corso)
}
class com.unina.project.controller.ResettaPasswordController {
- PasswordField passwordField
- PasswordField confermapasswordField
- Autenticazione autenticazione
- UtenteDAO utenteDAO
- AutenticazioneDAO autenticazioneDAO
+ ChangeListener<Boolean> passwordListner
+ void setEmail(String)
+ String nomeUtente(String)
- double calcolaPasswordStrength(String,String)
~ void onConfermaButtonClick(ActionEvent)
+ void initialize(URL,ResourceBundle)
}
class com.unina.project.controller.ProfileGestoreController {
+ Button nuovoCorsoButton
+ TreeTableView<Corso> corsiTableView
+ TreeTableColumn<Corso,String> codCorsoTableColumn
+ TreeTableColumn<Corso,String> titoloTableColumn
+ TreeTableColumn<Corso,String> descrizioneTableColumn
+ TreeTableColumn<Corso,Integer> iscrizionimassimeTableColumn
+ TreeTableColumn<Corso,Integer> numerolezioniTableColumn
+ TreeTableColumn<Corso,String> tassopresenzeminimeTableColumn
+ TreeTableColumn<Corso,String> privatoTableColumn
+ TreeTableColumn<Corso,String> areeTableColumn
- MenuBar gestoreMenuBar
+ Menu nomeGestoreMenu
+ TableView<Studente> studentiTableView
+ TableColumn<Studente,String> nomeTableColumn
+ TableColumn<Studente,String> cognomeTableColumn
+ TableColumn<Studente,String> emailTableColumn
+ TableColumn<Studente,String> codStudenteTableColumn
+ TableColumn<Studente,String> sessoTableColumn
+ TableColumn<Studente,LocalDate> datadiNascitaTableColumn
+ TableColumn<Studente,String> idoneoTableColumn
- TableView<Operatore> operatoriTableView
+ TableColumn<Operatore,String> emailoperatoreTableColumn
+ TableColumn<Operatore,String> nomeoperatoreTableColumn
+ TableColumn<Operatore,String> cognomeoperatoreTableColumn
+ TableColumn<Operatore,String> codoperatoreTableColumn
+ TableColumn<Operatore,String> richiestaTableColumn
- ObservableList<Studente> listStudenti
- ObservableList<Operatore> listOperatori
- Corso rowData
- Operatore rowDataOperatore
- StudenteDAO studenteDAO
- Autenticazione autenticazione
- AutenticazioneDAO autenticazioneDAO
+ Gestore gestore
- GestoreDAO gestoreDAO
+ AreaTematicaDAO areaTematicaDAO
+ Corso corso
+ CorsoDAO corsoDAO
- OperatoreDAO operatoreDAO
- Operatore operatore
- UtenteDAO utenteDAO
- Stage loginStage
+ void initialize(URL,ResourceBundle)
+ void setCorsiTableView()
+ void setOperatoriTableView()
+ void setStudentiTableView()
+ void updateStudentiTableView(String)
- void eliminaOperatore(String,String)
- void visualizzaStatistiche(Corso)
- void styleRowColor()
+ void eliminaCorso(Corso)
+ void aggiungiOperatore(Corso)
+ void modificaCorso(Corso)
+ void updateCorsiTableView()
+ void updateOperatoriTableView(String)
+ void setProfileGestore(Stage,String,String)
+ void oncloseButtonMenuClick()
- void oneliminaGestoreButtonMenuClick()
- void eliminaGestore()
+ void onNuovoCorsoButton()
}
class com.unina.project.controller.LoginController {
+ Button loginButton
+ TextField emailTextField
+ TextField passwordTextField
+ ProgressBar loginProgressBar
+ TextField gestoriemailTextField
+ PasswordField gestoriPasswordField
- Label passwordDimenticataLabel
- AutenticazioneDAO autenticazioneDAO
- JMetro jMetro
- ChangeListener<Boolean> checkEmailListner
- ChangeListener<Boolean> checkEmailGestoriListner
+ void initialize(URL,ResourceBundle)
+ void openRegistrazioneScene(ActionEvent)
+ void openProfileScene(ActionEvent)
+ void openRegistrazioneGestoriScene(ActionEvent)
+ void openProfileGestoriScene(ActionEvent)
- void loadProfile(ActionEvent,FXMLLoader,String)
- void checkLoginFail()
+ void passwordDimenticata(MouseEvent)
}
class com.unina.project.controller.RegistrazioneGestoreController {
+ Button registratigestoreButton
+ TextArea descrizionegestoreTextArea
+ TextField telefonoTextField
+ TextField indirizzoTextField
+ TextField nomeTextField
+ Sede sede
- Gestore gestore
- AutenticazioneDAO autenticazioneDAO
- GestoreDAO gestoreDAO
- SedeDAO sedeDAO
- ChangeListener<Boolean> nomeListner
- ChangeListener<Boolean> descrizioneLister
+ void initialize(URL,ResourceBundle)
+ void getinserisciScene()
+ void checkDescrizioneLenght()
+ void oninviasottoscrizioneButtonClick(ActionEvent)
}
class com.unina.project.controller.CorsoController {
+ TextArea descrizionecorsoTextArea
+ TextField iscrizioniMassimeTextField
+ TextField lezioniTextField
+ TextField lezioniMinimeTextField
+ Button nuovoCorsoButton
+ TextField tassoMinimoTextField
+ TextField titoloTextField
+ ChoiceBox<String> tipocorsoChoiseBox
+ HBox tagshbox
+ TagBar tagBar
+ List<String> areeTematiche
- ChangeListener<Boolean> descrizioneLister
- ChangeListener<Boolean> lezioniMinimeListner
+ void initialize(URL,ResourceBundle)
+ void checkDescrizioneLenght()
+ void setcodGestore(String)
+ void onnuovoCorsoButtonClick()
}
class com.unina.project.controller.IndirizzoController {
+ Button inserisciButton
- TextField viaTextField
- TextField civicoTextField
- TextField cittaTextField
- TextField provinciaTextField
- TextField siglaTextField
- List<String> comuni
- List<String> province
+ ChangeListener<Boolean> provinciaListner
+ void initialize(URL,ResourceBundle)
+ void getProvince(List<String>)
+ String getProvinceSigle(String)
+ void oninserisciButtonClick(ActionEvent)
+ Sede getSede()
}
class com.unina.project.controller.RegistrazioneController {
+ TextField emailTextField
- TextField nomeTextField
- TextField cognomeTextField
- DatePicker dataDatePicker
- TextField comunedinascitaTextField
- ChoiceBox<String> sessoChoiceBox
- TextField codicefiscaleTextField
+ PasswordField passwordField
- ProgressBar passwordProgressBar
+ PasswordField repeatpasswordField
- List<String> comuni
- Utente utente
+ Autenticazione autenticazione
- AutenticazioneDAO autenticazioneDAO
- UtenteDAO utenteDAO
- ChangeListener<Boolean> generaCodiceListner
+ ChangeListener<Boolean> checkEmailListner
+ ChangeListener<Boolean> passwordListner
+ ChangeListener<Boolean> repeatpasswordListner
+ void initialize(URL,ResourceBundle)
+ void getComuni(List<String>)
- void newCodiceFiscale()
- void setDataPicker()
- void restrictDatePicker(DatePicker,LocalDate,LocalDate)
+ void passwordCheck()
- double calcolaPasswordStrength(String,String)
+ void onregistratiButtonClick(ActionEvent)
+ void accountCreatedSuccessful(ActionEvent)
+ void onindietroButtonClick(ActionEvent)
}
class com.unina.project.controller.ModificaDatiAutenticazioneController {
- Button confermaModificaButton
- PasswordField confermaPasswordField
- TextField emailTextField
- PasswordField passwordField
- AutenticazioneDAO autenticazioneDAO
- UtenteDAO utenteDAO
- Autenticazione autenticazione
+ ChangeListener<Boolean> passwordListner
+ void setAutenticazione(Autenticazione)
+ String nomeUtente(String)
- double calcolaPasswordStrength(String,String)
~ void confermaModifica()
+ void initialize(URL,ResourceBundle)
}


com.unina.project.controller.CorsoController <|-- com.unina.project.controller.CorsoModificaController
com.unina.project.controller.RegistrazioneController <|-- com.unina.project.controller.RegistrazioneGestoreController
com.unina.project.controller.ProfileGestoreController <|-- com.unina.project.controller.CorsoController
com.unina.project.controller.RegistrazioneGestoreController <|-- com.unina.project.controller.IndirizzoController
@enduml