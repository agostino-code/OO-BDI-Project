@startuml
class com.unina.project.controller.profile.ProfileController {
+ AnchorPane operatoreAnchorPane
- Button gestioneCorsiButton
- Button gestorelezioneButton
- Button richiesteButton
- StackPane stackPanelProfilo
- Stage loginStage
+ Autenticazione autenticazione
+ Utente utente
- UtenteDAO utenteDAO
- OperatoreDAO operatoreDAO
~ void onDatiAnagraficiButtonClick()
~ void onDatiAutenticazioneButtonClick()
~ void onIscrizioneCorsiButtonClick()
~ void onLogoutButtonClick(ActionEvent)
~ void oniscrizioniLezioniButtonClick()
+ void setHomepage()
+ void setProfile(Stage,String,String)
+ void onGestioneCorsiButtonClick()
+ void onGestioneLezioniButtonClick()
+ void onRichiesteButtonClick()
}
class com.unina.project.controller.profile.IscrizioneCorsoController {
- TreeTableView<CorsoRicerca> ricercacorsiTableView
+ TreeTableColumn<CorsoRicerca,String> codiceCorsoTableColumn
+ TreeTableColumn<CorsoRicerca,String> titoloTableColumn
+ TreeTableColumn<CorsoRicerca,String> descrizioneTableColumn
+ TreeTableColumn<CorsoRicerca,String> codiceGestoreTableColumn
+ TreeTableColumn<CorsoRicerca,String> nomeGestoreTableColumn
+ TreeTableColumn<CorsoRicerca,String> cittaGestoreTableColumn
+ TreeTableColumn<CorsoRicerca,String> provinciaGestoreTableColumn
+ TreeTableColumn<CorsoRicerca,String> areeTableColumn
+ TreeTableColumn<CorsoRicerca,String> tipoTableColumn
+ TreeTableColumn<CorsoRicerca,String> telefonoGestoreTableColumn
- Utente utente
- CorsoRicerca rowData
- CorsoDAO corsoDAO
- Studente studente
- StudenteDAO studenteDAO
- OperatoreDAO operatoreDAO
+ void initialize(URL,ResourceBundle)
- void iscrizioneCorso(CorsoRicerca)
- void dettagliCorso(CorsoRicerca)
- void setCorsoRicercaTableView()
+ void setDefaultRicercaTableView()
+ void setRicercaTableView(String,List<String>)
~ void onCercaCorsoButtonClick(ActionEvent)
+ void setDatiUtente(Utente)
}
class com.unina.project.controller.profile.HomepageController {
+ TreeTableView<CorsoIdoneo> corsiTableView
+ TreeTableColumn<CorsoIdoneo,String> codCorsoTableColumn
+ TreeTableColumn<CorsoIdoneo,String> titoloTableColumn
+ TreeTableColumn<CorsoIdoneo,String> descrizioneTableColumn
+ TreeTableColumn<CorsoIdoneo,String> idoneoTableColumn
+ TreeTableColumn<CorsoIdoneo,Integer> numerolezioniTableColumn
+ TreeTableColumn<CorsoIdoneo,String> tassopresenzeminimeTableColumn
+ TreeTableColumn<CorsoIdoneo,String> privatoTableColumn
+ TreeTableColumn<CorsoIdoneo,String> areeTableColumn
+ TableView<Lezione> lezioniTableView
+ TableColumn<Lezione,String> codCorsoLezioneTableColumn
+ TableColumn<Lezione,String> titoloLezioneTableColumn
+ TableColumn<Lezione,String> descrizioneLezioneTableColumn
+ TableColumn<Lezione,LocalDate> dataTableColumn
+ TableColumn<Lezione,LocalTime> oraTableColumn
+ TableColumn<Lezione,LocalTime> durataTableColumn
+ TableColumn<Lezione,String> codLezioneTableColumn
- Studente studente
- StudenteDAO studenteDAO
- CorsoDAO corsoDAO
- LezioneDAO lezioneDAO
- Corso rowData
+ void initialize(URL,ResourceBundle)
+ void setCorsiTableView()
+ void setLezioniTableView()
- void updateCorsiTableView()
+ void updateLezioniTableView()
+ void disiscriviCorso(String,String)
+ void setDatiUtente(Utente)
}

class com.unina.project.controller.profile.LezioneModificaController {
+ void onnuovaLezioneButtonClick(ActionEvent)
+ void setLezione(Lezione)
}
class com.unina.project.controller.profile.IscrizioneLezioniController {
+ TreeTableView<Lezione> lezioniTableView
+ TreeTableColumn<Lezione,String> codCorsoTableColumn
+ TreeTableColumn<Lezione,String> titoloTableColumn
+ TreeTableColumn<Lezione,String> descrizioneTableColumn
+ TreeTableColumn<Lezione,LocalDate> dataTableColumn
+ TreeTableColumn<Lezione,LocalTime> oraTableColumn
+ TreeTableColumn<Lezione,LocalTime> durataTableColumn
+ TreeTableColumn<Lezione,String> codLezioneTableColumn
- Lezione rowDataLezione
- Studente studente
- LezioneDAO lezioneDAO
- StudenteDAO studenteDAO
- CorsoDAO corsoDAO
+ void initialize(URL,ResourceBundle)
+ void setLezioniTableView()
+ void updateLezioniTableView()
- void styleRowColor()
+ void setDatiUtente(Utente)
}
class com.unina.project.controller.profile.RichiesteController {
+ TableView<Studente> richiestecorsiTableView
+ TableColumn<Studente,String> nomeTableColumn
+ TableColumn<Studente,String> cognomeTableColumn
+ TableColumn<Studente,String> emailTableColumn
+ TableColumn<Studente,String> codStudenteTableColumn
+ TableColumn<Studente,String> sessoTableColumn
+ TableColumn<Studente,LocalDate> datadiNascitaTableColumn
+ TreeTableView<Corso> corsiTableView
+ TreeTableColumn<Corso,String> codCorsoTableColumn
+ TreeTableColumn<Corso,String> titoloTableColumn
+ TreeTableColumn<Corso,String> descrizioneTableColumn
+ TreeTableColumn<Corso,Integer> iscrizionimassimeTableColumn
+ TreeTableColumn<Corso,Integer> numerolezioniTableColumn
+ TreeTableColumn<Corso,String> tassopresenzeminimeTableColumn
+ TreeTableColumn<Corso,String> areeTableColumn
- Corso rowDataCorso
- Studente rowDataStudente
- StudenteDAO studenteDAO
- Operatore operatore
- OperatoreDAO operatoreDAO
- CorsoDAO corsoDAO
- ObservableList<Studente> listStudentiDaAccettare
+ void initialize(URL,ResourceBundle)
+ void accettaRichiesta(Studente,Corso)
+ void eliminaRichiesta(Studente,Corso)
+ void setCorsiTableView()
+ void setRichiesteTableView()
+ void updateCorsiTableView()
+ void updateRichiesteTableView(String)
+ void setDatiUtente(Utente)
}
class com.unina.project.controller.profile.CorsoRicerca {
+ String codGestore
+ String descrizione
+ String titolo
+ String codCorso
+ String nome
+ String citta
+ String provincia
+ String telefono
+ Integer iscrizioniMassime
+ Integer numeroLezioni
+ Integer tassoPresenzeMinime
+ Boolean Privato
+ String tag
+ List<AreaTematica> areetematiche
+ void setCodGestore(String)
+ void setDescrizione(String)
+ void setTitolo(String)
+ void setCodCorso(String)
+ void setNome(String)
+ void setCitta(String)
+ void setProvincia(String)
+ void setAreetematiche(List<AreaTematica>)
+ void setTelefono(String)
+ void setIscrizioniMassime(Integer)
+ void setNumeroLezioni(Integer)
+ void setTassoPresenzeMinime(Integer)
+ String getPrivato()
+ void setPrivato(Boolean)
+ void setTag(String)
}
class com.unina.project.controller.profile.RicercaCorsoController {
- Button cercaCorsoButton
- TextField codGestoreTextField
- TextField codcorsoTextField
- TextField cittaTextField
- TextField nomeTextField
- HBox tagshbox
- TextField provinciaTextField
- ChoiceBox<String> tipocorsoChoiseBox
- TextField titoloTextField
+ TagBar tagBar
~ String SQL
+ void initialize(URL,ResourceBundle)
~ void onCercaCorsoButtonClick(ActionEvent)
+ String getParametriRicercaSQL()
+ List<String> getTagsRicerca()
}
class com.unina.project.controller.profile.DatiProfileController {
- TextField CodiceFiscaleTextField
- TextField CognomeTextField
- TextField ComuneNascitaTextField
- TextField DataNascitaTextField
- TextField NomeTextField
- TextField emailTextField
- PasswordField passwordField
- TextField passwordTextField
- Autenticazione autenticazione
- AutenticazioneDAO autenticazioneDAO
+ void setDatiAutenticazione(Autenticazione)
+ void setDatiUtente(Utente)
~ void onViewMousePressed()
~ void onViewMouseRelased()
+ void onModificaDatiButtonClick(ActionEvent)
+ void onEliminaAccountButtonClick()
- void eliminaUtente()
}
class com.unina.project.controller.profile.GestioneLezioniController {
+ TableView<Studente> studentiTableView
+ TableColumn<Studente,String> nomeTableColumn
+ TableColumn<Studente,String> cognomeTableColumn
+ TableColumn<Studente,String> emailTableColumn
+ TableColumn<Studente,String> codStudenteTableColumn
+ TableColumn<Studente,String> sessoTableColumn
+ TableColumn<Studente,LocalDate> datadiNascitaTableColumn
+ TableColumn<Studente,String> presenteTableColumn
+ TreeTableView<Lezione> lezioniTableView
+ TreeTableColumn<Lezione,String> codCorsoTableColumn
+ TreeTableColumn<Lezione,String> titoloTableColumn
+ TreeTableColumn<Lezione,String> descrizioneTableColumn
+ TreeTableColumn<Lezione,LocalDate> dataTableColumn
+ TreeTableColumn<Lezione,LocalTime> oraTableColumn
+ TreeTableColumn<Lezione,LocalTime> durataTableColumn
+ TreeTableColumn<Lezione,String> codLezioneTableColumn
- Lezione rowDataLezione
- Studente rowDataStudente
- LezioneDAO lezioneDAO
- Operatore operatore
- OperatoreDAO operatoreDAO
- CorsoDAO corsoDAO
- ObservableList<Studente> listStudenti
+ void initialize(URL,ResourceBundle)
+ void setLezioniTableView()
+ void setStudentiTableView()
+ void nuovalezione(String)
+ void modificaLezione(Lezione)
+ void eliminaLezione(Lezione)
+ void updateLezioniTableView()
- void styleRowColor()
+ void updateStudentiTableView(String)
+ void setDatiUtente(Utente)
}
class com.unina.project.controller.profile.GestioneCorsiController {
+ TableView<Studente> studentiTableView
+ TableColumn<Studente,String> nomeTableColumn
+ TableColumn<Studente,String> cognomeTableColumn
+ TableColumn<Studente,String> emailTableColumn
+ TableColumn<Studente,String> codStudenteTableColumn
+ TableColumn<Studente,String> sessoTableColumn
+ TableColumn<Studente,LocalDate> datadiNascitaTableColumn
+ TableColumn<Studente,String> idoneoTableColumn
+ TreeTableView<Corso> corsiTableView
+ TreeTableColumn<Corso,String> codCorsoTableColumn
+ TreeTableColumn<Corso,String> titoloTableColumn
+ TreeTableColumn<Corso,String> descrizioneTableColumn
+ TreeTableColumn<Corso,Integer> iscrizionimassimeTableColumn
+ TreeTableColumn<Corso,Integer> numerolezioniTableColumn
+ TreeTableColumn<Corso,String> tassopresenzeminimeTableColumn
+ TreeTableColumn<Corso,String> areeTableColumn
+ TreeTableColumn<Corso,String> privatoTableColumn
- Corso rowDataCorso
- Studente rowDataStudente
- StudenteDAO studenteDAO
- Operatore operatore
- OperatoreDAO operatoreDAO
- CorsoDAO corsoDAO
- ObservableList<Studente> listStudenti
+ void initialize(URL,ResourceBundle)
+ void eliminaStudente(Corso)
+ void accettaRichiesta(String,Corso)
+ void eliminaRichiesta(String,Corso)
- void eliminaOperatore(String,Corso)
- void visualizzaStatistiche(Corso)
+ void setCorsiTableView()
+ void setStudentiTableView()
+ void updateCorsiTableView()
- void styleRowColor()
+ void updateStudentiTableView(String)
+ void setDatiUtente(Utente)
}
class com.unina.project.controller.profile.LezioneController {
+ TextField oraTextField
+ TextField codCorsoTextField
+ DatePicker dataPicker
+ TextArea descrizioneTextArea
+ TextField durataTextField
+ Button nuovaLezioneButton
+ TextField titoloTextField
+ Lezione lezione
+ LezioneDAO lezioneDAO
- CorsoDAO corsoDAO
- ChangeListener<Boolean> descrizioneLister
+ ChangeListener<Boolean> oraListner
+ ChangeListener<Boolean> durataListner
+ void initialize(URL,ResourceBundle)
+ void checkDescrizioneLenght()
+ void setcodCorso(String)
- void restrictDatePicker(DatePicker,LocalDate,LocalDate)
+ void onnuovaLezioneButtonClick(ActionEvent)
}
class com.unina.project.controller.profile.StatisticheController {
+ CategoryAxis xAxis
+ NumberAxis yAxis
+ LineChart<String,Number> statisticheLineChart
+ BarChart<String,Number> statisticheBarChart
+ PieChart statistichePieChart
- Corso corso
- Statistiche statistiche
- StatisticheDAO statisticheDAO
+ void setStatistiche(Corso)
- void setStatisticheLezioni()
- void setStatisticheLezioniSingole()
- void setStatisticheRiempimento()
}

com.unina.project.controller.profile.LezioneController <|-- com.unina.project.controller.profile.LezioneModificaController
@enduml